strict digraph {
subgraph cluster_4431_Merkle {
label = "Merkle"
"4431_verifyInclusionKeccak" [label="verifyInclusionKeccak"]
"4431_merkleizeSha256" [label="merkleizeSha256"]
"4431_verifyInclusionSha256" [label="verifyInclusionSha256"]
"4431_processInclusionProofKeccak" [label="processInclusionProofKeccak"]
"4431_processInclusionProofSha256" [label="processInclusionProofSha256"]
"4431_verifyInclusionKeccak" -> "4431_processInclusionProofKeccak"
"4431_verifyInclusionSha256" -> "4431_processInclusionProofSha256"
}subgraph cluster_solidity {
label = "[Solidity]"
"staticcall(uint256,uint256,uint256,uint256,uint256,uint256)" 
"mload(uint256)" 
"keccak256(uint256,uint256)" 
"gas()" 
"sha256(bytes)" 
"require(bool,string)" 
"abi.encodePacked()" 
"mstore(uint256,uint256)" 
"revert(uint256,uint256)" 
"4431_processInclusionProofSha256" -> "require(bool,string)"
"4431_processInclusionProofSha256" -> "mload(uint256)"
"4431_processInclusionProofSha256" -> "staticcall(uint256,uint256,uint256,uint256,uint256,uint256)"
"4431_merkleizeSha256" -> "sha256(bytes)"
"4431_merkleizeSha256" -> "abi.encodePacked()"
"4431_processInclusionProofSha256" -> "mstore(uint256,uint256)"
"4431_processInclusionProofSha256" -> "gas()"
"4431_processInclusionProofKeccak" -> "mstore(uint256,uint256)"
"4431_processInclusionProofKeccak" -> "require(bool,string)"
"4431_processInclusionProofKeccak" -> "keccak256(uint256,uint256)"
"4431_processInclusionProofKeccak" -> "mload(uint256)"
"4431_processInclusionProofSha256" -> "revert(uint256,uint256)"
}
}